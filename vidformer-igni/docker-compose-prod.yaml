services:
  postgres:
    image: postgres:latest
    container_name: igni_db
    environment:
      POSTGRES_USER: igni
      POSTGRES_PASSWORD: igni
      POSTGRES_DB: igni
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
  valkey:
    image: valkey/valkey
    container_name: igni_valkey
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - ./valkey.conf:/usr/local/etc/valkey/valkey.conf
    command: valkey-server /usr/local/etc/valkey/valkey.conf
  web:
    image: nginx
    container_name: igni_web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - igni
  igni:
    image: igni
    container_name: igni_app
    entrypoint: ["wait-for-it", "postgres:5432", "--", "/usr/local/bin/vidformer-igni", "server", "--config", "/etc/igni.toml"]
    environment:
      IGNI_DB: postgres://igni:igni@postgres:5432/igni
      RUST_LOG: warn
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./igni.toml:/etc/igni.toml
    depends_on:
      - postgres
      - valkey
    restart: unless-stopped
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - web
volumes:
  postgres_data:
  nginx_logs:
